services:
  mysql:
    image: mysql:${MYSQL_VERSION}
    hostname: mysql
    container_name: mysql
    networks:
      dev_net:
        ipv4_address: ${MYSQL_IP}
    ports:
      - ${MYSQL_HOST_PORT}:${MYSQL_CONTAINER_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PW}
      MYSQL_DATABASE: default_db
      TZ: Asia/Seoul
    volumes:
      - ../init/mysql/my.cnf:/etc/mysql/my.cnf
      - ../init/mysql:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql:rw
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4096M
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3
  redis:
    image: redis:${REDIS_VERSION}
    hostname: redis
    container_name: redis
    restart: always
    networks:
      dev_net:
        ipv4_address: ${REDIS_IP}
    ports:
      - ${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}
    labels:
      - "name=redis"
      - "mode=standalone"
    volumes:
      - redis_data:/data:rw
      - redis_conf:/usr/local/conf:rw
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
  memcached:
    image: memcached:${MEMCACHED_VERSION}
    hostname: memcached
    container_name: memcached
    restart: always
    networks:
      dev_net:
        ipv4_address: ${MEMCACHED_IP}
    ports:
      - ${MEMCACHED_HOST_PORT}:${MEMCACHED_CONTAINER_PORT}
    command: [ "-m", "1024" ]
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
  zookeeper:
    image: wurstmeister/zookeeper:${ZOOKEEPER_VERSION}
    platform: linux/amd64
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    networks:
      dev_net:
        ipv4_address: ${ZOOKEEPER_IP}
    ports:
      - ${ZOOKEEPER_HOST_PORT}:${ZOOKEEPER_CONTAINER_PORT}
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
  kafka:
    image: wurstmeister/kafka:${KAFKA_VERSION}
    hostname: kafka
    container_name: kafka
    restart: always
    networks:
        dev_net:
            ipv4_address: ${KAFKA_IP}
    ports:
      - ${KAFKA_HOST_PORT}:${KAFKA_CONTAINER_PORT}
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: ${KAFKA_TOPICS}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
